.program verticaldef

; generate vertical deflection signal
; PIO clock frequency = 78330.2 Hz
; TODO: wait for IRQ + change timing 

.wrap_target
    set pins, 1 [0]    ; Charge capacitor for 1 cycle
    set pins, 0 [12]    ; let cap. discharge over 13 cycles
.wrap

% c-sdk {

// Helper function (for use in C program) to initialize this PIO program
void verticaldef_program_init(PIO pio, uint sm, uint offset, uint v_pin, float div) {

    // Sets up state machine and wrap target. This function is automatically
    // generated in oscverticaldefvideo.pio.h.
    pio_sm_config c = verticaldef_program_get_default_config(offset);

    // Allow PIO to control GPIO pin (as output)
    pio_gpio_init(pio, v_pin);

    // Connect pin to SET pin (control with 'set' instruction)
    sm_config_set_set_pins(&c, v_pin, 1);

    // Set the pin direction to output (in PIO)
    pio_sm_set_consecutive_pindirs(pio, sm, v_pin, 1, true);
    
    // Set the clock divider for the state machine
    sm_config_set_clkdiv(&c, div);

    // Load configuration and jump to start of the program
    pio_sm_init(pio, sm, offset, &c);
}

%}